-- MySQL Script generated by MySQL Workbench
-- 11/20/14 21:11:07
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema VideoBookApplication
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `VideoBookApplication` ;

-- -----------------------------------------------------
-- Schema VideoBookApplication
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `VideoBookApplication` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `VideoBookApplication` ;

-- -----------------------------------------------------
-- Table `USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `USERS` ;

CREATE TABLE IF NOT EXISTS `USERS` (
  `USERNAME` VARCHAR(50) NOT NULL,
  `FL_LIBRARY` TINYINT(1) NULL DEFAULT 1,
  `FL_VIDEO` TINYINT(1) NULL DEFAULT 1,
  `FL_MUSIC` TINYINT(1) NULL DEFAULT 1,
  `FL_SOFTWARE` TINYINT(1) NULL DEFAULT 1,
  `FL_SUPERUSER` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`USERNAME`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `AUTORI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AUTORI` ;

CREATE TABLE IF NOT EXISTS `AUTORI` (
  `ID_AUTORE` INT NOT NULL AUTO_INCREMENT,
  `COGNOME` VARCHAR(100) NOT NULL,
  `NOME` VARCHAR(100) NULL,
  PRIMARY KEY (`ID_AUTORE`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CATEGORIE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CATEGORIE` ;

CREATE TABLE IF NOT EXISTS `CATEGORIE` (
  `ID_CATEGORIA` INT NOT NULL AUTO_INCREMENT,
  `CATEGORIA` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`ID_CATEGORIA`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `CATEGORIA_UNIQUE` ON `CATEGORIE` (`CATEGORIA` ASC);


-- -----------------------------------------------------
-- Table `POSIZIONI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `POSIZIONI` ;

CREATE TABLE IF NOT EXISTS `POSIZIONI` (
  `ID_POSIZIONE` INT NOT NULL AUTO_INCREMENT,
  `POSIZIONE` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`ID_POSIZIONE`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `CATEGORIA_UNIQUE` ON `POSIZIONI` (`POSIZIONE` ASC);


-- -----------------------------------------------------
-- Table `INFOLIBRI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `INFOLIBRI` ;

CREATE TABLE IF NOT EXISTS `INFOLIBRI` (
  `ID_INFOLIBRO` INT NOT NULL AUTO_INCREMENT,
  `IMG` VARCHAR(100) NULL,
  `EDITORE` VARCHAR(45) NULL,
  `ISBN` VARCHAR(20) NULL,
  `YEAR` VARCHAR(5) NULL,
  `TRAMA` BLOB NULL,
  `URL_SCHEDA` VARCHAR(150) NULL,
  PRIMARY KEY (`ID_INFOLIBRO`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NOTELIBRI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NOTELIBRI` ;

CREATE TABLE IF NOT EXISTS `NOTELIBRI` (
  `ID_NOTA` INT NOT NULL AUTO_INCREMENT,
  `NOTA` BLOB NULL,
  PRIMARY KEY (`ID_NOTA`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LIBRI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `LIBRI` ;

CREATE TABLE IF NOT EXISTS `LIBRI` (
  `ID_LIBRO` INT NOT NULL AUTO_INCREMENT,
  `TITOLO` VARCHAR(255) NOT NULL,
  `SERIE` VARCHAR(255) NULL,
  `FL_EBOOK` TINYINT(1) NOT NULL DEFAULT 0,
  `AUTORI_ID_AUTORE` INT NOT NULL,
  `CATEGORIE_ID_CATEGORIA` INT NOT NULL,
  `POSIZIONI_ID_POSIZIONE` INT NOT NULL,
  `INFOLIBRI_ID_INFOLIBRO` INT NOT NULL,
  `NOTELIBRI_ID_NOTA` INT NOT NULL,
  `DT_INSERT` DATETIME NULL,
  PRIMARY KEY (`ID_LIBRO`),
  CONSTRAINT `fk_LIBRI_AUTORI`
    FOREIGN KEY (`AUTORI_ID_AUTORE`)
    REFERENCES `AUTORI` (`ID_AUTORE`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_LIBRI_CATEGORIE1`
    FOREIGN KEY (`CATEGORIE_ID_CATEGORIA`)
    REFERENCES `CATEGORIE` (`ID_CATEGORIA`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_LIBRI_POSIZIONI1`
    FOREIGN KEY (`POSIZIONI_ID_POSIZIONE`)
    REFERENCES `POSIZIONI` (`ID_POSIZIONE`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_LIBRI_INFOLIBRI1`
    FOREIGN KEY (`INFOLIBRI_ID_INFOLIBRO`)
    REFERENCES `INFOLIBRI` (`ID_INFOLIBRO`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_LIBRI_NOTELIBRI1`
    FOREIGN KEY (`NOTELIBRI_ID_NOTA`)
    REFERENCES `NOTELIBRI` (`ID_NOTA`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_LIBRI_AUTORI_idx` ON `LIBRI` (`AUTORI_ID_AUTORE` ASC);

CREATE INDEX `fk_LIBRI_CATEGORIE1_idx` ON `LIBRI` (`CATEGORIE_ID_CATEGORIA` ASC);

CREATE INDEX `fk_LIBRI_POSIZIONI1_idx` ON `LIBRI` (`POSIZIONI_ID_POSIZIONE` ASC);

CREATE INDEX `fk_LIBRI_INFOLIBRI1_idx` ON `LIBRI` (`INFOLIBRI_ID_INFOLIBRO` ASC);

CREATE INDEX `fk_LIBRI_NOTELIBRI1_idx` ON `LIBRI` (`NOTELIBRI_ID_NOTA` ASC);


-- -----------------------------------------------------
-- Table `RESERVED`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RESERVED` ;

CREATE TABLE IF NOT EXISTS `RESERVED` (
  `RESERVED` VARCHAR(30) NOT NULL,
  `TYPE_RESERVED` INT NOT NULL,
  PRIMARY KEY (`RESERVED`, `TYPE_RESERVED`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WORD_MASTER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WORD_MASTER` ;

CREATE TABLE IF NOT EXISTS `WORD_MASTER` (
  `ID_WORD` INT NOT NULL AUTO_INCREMENT,
  `WORD` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`ID_WORD`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `WORD_UNIQUE` ON `WORD_MASTER` (`WORD` ASC);


-- -----------------------------------------------------
-- Table `STEMMER_FORCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `STEMMER_FORCE` ;

CREATE TABLE IF NOT EXISTS `STEMMER_FORCE` (
  `WORD` VARCHAR(50) NOT NULL,
  `STEM` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`WORD`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WORD2NOME`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WORD2NOME` ;

CREATE TABLE IF NOT EXISTS `WORD2NOME` (
  `WORD_MASTER_ID_WORD` INT NOT NULL,
  `AUTORI_ID_AUTORE` INT NOT NULL,
  PRIMARY KEY (`WORD_MASTER_ID_WORD`, `AUTORI_ID_AUTORE`),
  CONSTRAINT `fk_WORD_MASTER_has_AUTORI_WORD_MASTER2`
    FOREIGN KEY (`WORD_MASTER_ID_WORD`)
    REFERENCES `WORD_MASTER` (`ID_WORD`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_WORD_MASTER_has_AUTORI_AUTORI2`
    FOREIGN KEY (`AUTORI_ID_AUTORE`)
    REFERENCES `AUTORI` (`ID_AUTORE`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `WORD2COGNOME`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WORD2COGNOME` ;

CREATE TABLE IF NOT EXISTS `WORD2COGNOME` (
  `WORD_MASTER_ID_WORD` INT NOT NULL,
  `AUTORI_ID_AUTORE` INT NOT NULL,
  PRIMARY KEY (`WORD_MASTER_ID_WORD`, `AUTORI_ID_AUTORE`),
  CONSTRAINT `fk_WORD_MASTER_has_AUTORI_WORD_MASTER1`
    FOREIGN KEY (`WORD_MASTER_ID_WORD`)
    REFERENCES `WORD_MASTER` (`ID_WORD`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_WORD_MASTER_has_AUTORI_AUTORI1`
    FOREIGN KEY (`AUTORI_ID_AUTORE`)
    REFERENCES `AUTORI` (`ID_AUTORE`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_WORD_MASTER_has_AUTORI_AUTORI1_idx` ON `WORD2COGNOME` (`AUTORI_ID_AUTORE` ASC);

CREATE INDEX `fk_WORD_MASTER_has_AUTORI_WORD_MASTER1_idx` ON `WORD2COGNOME` (`WORD_MASTER_ID_WORD` ASC);


-- -----------------------------------------------------
-- Table `WORD2NOME`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WORD2NOME` ;

CREATE TABLE IF NOT EXISTS `WORD2NOME` (
  `WORD_MASTER_ID_WORD` INT NOT NULL,
  `AUTORI_ID_AUTORE` INT NOT NULL,
  PRIMARY KEY (`WORD_MASTER_ID_WORD`, `AUTORI_ID_AUTORE`),
  CONSTRAINT `fk_WORD_MASTER_has_AUTORI_WORD_MASTER2`
    FOREIGN KEY (`WORD_MASTER_ID_WORD`)
    REFERENCES `WORD_MASTER` (`ID_WORD`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_WORD_MASTER_has_AUTORI_AUTORI2`
    FOREIGN KEY (`AUTORI_ID_AUTORE`)
    REFERENCES `AUTORI` (`ID_AUTORE`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_WORD_MASTER_has_AUTORI_AUTORI2_idx` ON `WORD2NOME` (`AUTORI_ID_AUTORE` ASC);

CREATE INDEX `fk_WORD_MASTER_has_AUTORI_WORD_MASTER2_idx` ON `WORD2NOME` (`WORD_MASTER_ID_WORD` ASC);


-- -----------------------------------------------------
-- Table `WORD2BOOK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WORD2BOOK` ;

CREATE TABLE IF NOT EXISTS `WORD2BOOK` (
  `WORD_MASTER_ID_WORD` INT NOT NULL,
  `LIBRI_ID_LIBRO` INT NOT NULL,
  PRIMARY KEY (`WORD_MASTER_ID_WORD`, `LIBRI_ID_LIBRO`),
  CONSTRAINT `fk_WORD_MASTER_has_LIBRI_WORD_MASTER1`
    FOREIGN KEY (`WORD_MASTER_ID_WORD`)
    REFERENCES `WORD_MASTER` (`ID_WORD`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_WORD_MASTER_has_LIBRI_LIBRI1`
    FOREIGN KEY (`LIBRI_ID_LIBRO`)
    REFERENCES `LIBRI` (`ID_LIBRO`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_WORD_MASTER_has_LIBRI_LIBRI1_idx` ON `WORD2BOOK` (`LIBRI_ID_LIBRO` ASC);

CREATE INDEX `fk_WORD_MASTER_has_LIBRI_WORD_MASTER1_idx` ON `WORD2BOOK` (`WORD_MASTER_ID_WORD` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
