### CONFIGURATION FILE
start.insert.value = false

### DATABASE PARAMETERS
db.host = 192.168.0.20
db.port = 3106
db.schema = VideoBookApplication
db.password = mauro
db.user = mauro

### DEFAULT VALUE CATEGORY / POSITION
catpos.default.value = ----------

### VALUE NOT FOUND FOR QUERY
notfound.value = -1

### QUERY PER USERS MODEL
users.insert.query = INSERT INTO USERS (USERNAME, FL_LIBRARY, FL_VIDEO, FL_MUSIC, FL_SOFTWARE, FL_SUPERUSER) VALUES (@user, @fllib, @flvid, @flmus, @flsw, @flsus)
users.read.query = SELECT * FROM USERS u WHERE u.USERNAME = @user

### QUERY PER CATEGORY MODEL
category.insert.query = INSERT INTO CATEGORIE (CATEGORIA) VALUES (@cat)
category.read.query = SELECT * FROM CATEGORIE c WHERE c.CATEGORIA=@cat
category.readall.query = SELECT * FROM CATEGORIE c ORDER BY c.CATEGORIA

### QUERY PER POSITION MODEL
position.insert.query = INSERT INTO POSIZIONI (POSIZIONE) VALUES (@pos)
position.read.query = SELECT * FROM POSIZIONI WHERE POSIZIONE=@pos
position.readall.query = SELECT * FROM POSIZIONI ORDER BY POSIZIONE

### QUERY PER RESERVED MODEL
reserved.insert.query = INSERT INTO RESERVED (RESERVED, TYPE_RESERVED) VALUES (@res, @typeres)
reserved.read.query = SELECT * FROM RESERVED WHERE TYPE_RESERVED = @typeres

### QUERY WORD2COGNOME
word2cognome.readone.query = select a.ID_WORD, a.WORD, c.ID_AUTORE, c.COGNOME, c.NOME from WORD_MASTER a, WORD2COGNOME b, AUTORI c where a.WORD = @wcognome and b.WORD_MASTER_ID_WORD = a.ID_WORD and c.ID_AUTORE=b.AUTORI_ID_AUTORE

### QUERY WORD2NOME
word2nome.readone.query = select a.ID_WORD, a.WORD, c.ID_AUTORE, c.COGNOME, c.NOME from WORD_MASTER a, WORD2NOME b, AUTORI c where a.WORD = @wnome and b.WORD_MASTER_ID_WORD = a.ID_WORD and c.ID_AUTORE=b.AUTORI_ID_AUTORE

### QUERY BOOKS
books.readmany.byauthor.query = select a.TITOLO, a.SERIE, a.FL_EBOOK, a.DT_INSERT, ifnull(b.ID_POSIZIONE, -1) as ID_POSIZIONE, b.POSIZIONE, ifnull(d.ID_INFOLIBRO, -1) as ID_INFOLIBRO, d.EDITORE, d.IMG, d.ISBN, d.YEAR, d.TRAMA, d.URL_SCHEDA, ifnull(e.ID_NOTA,-1) as ID_NOTA, e.NOTA from LIBRI a LEFT JOIN POSIZIONI b ON a.POSIZIONI_ID_POSIZIONE=b.ID_POSIZIONE LEFT JOIN CATEGORIE c ON a.CATEGORIE_ID_CATEGORIA=c.ID_CATEGORIA LEFT JOIN INFOLIBRI d ON a.INFOLIBRI_ID_INFOLIBRO=d.ID_INFOLIBRO LEFT JOIN NOTELIBRI e ON a.NOTELIBRI_ID_NOTA=e.ID_NOTA WHERE a.AUTORI_ID_AUTORE = @idauth


### QUERY PER GESTIONE FORZATURA STEMMER
stemmer.readall.query = SELECT * FROM STEMMER_FORCE